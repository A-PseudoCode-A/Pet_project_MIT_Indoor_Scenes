import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report

print("–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
data = pd.read_parquet("../1_data/1_2_ready_data/dataset.parquet")
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–í—ã–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –ø—Ä–∏–∑–Ω–∞–∫–∞")
X = data.iloc[:, :-1]
y = data["class"]
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–°–Ω–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏")
pca = PCA(n_components=100)
X_pca = pca.fit_transform(X_scaled)
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ–±—É—á–∞—é—â—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫—É")
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, shuffle=True
)
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏")
rfc_model = KNeighborsClassifier()
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏")
rfc_model.fit(X=X_train, y=y_train)
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

print("\n–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –º–æ–¥–µ–ª–∏")
y_pred = rfc_model.predict(X_test)
print("   –£—Å–ø–µ—à–Ω–æ üÜó")

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")
print("Clf report: ")
print(classification_report(y_test, y_pred))
